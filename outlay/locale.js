"use strict";

export let userLang, localeString;

const localeStringArray = {
  de: {
    add: "hinzufügen",
    addCategory: "Kategorie hinzufügen",
    and: "und",
    backup: "backup",
    category: "kategorie",
    categoryCanNotBeDeleted: "kategorie kann nicht gelöscht werden",
    categoryDelete: "kategorie löschen",
    categoryEdit: "kategorie bearbeiten",
    categoryIsUsedReason: "mindestens ein Häkchen bezieht sich darauf",
    categoryNameEdit: "kategorienamen bearbeiten",
    categoryNameNotChanged: "category name not changed",
    categoryNameNotSet: "Kategoriename nicht geändert",
    categorySave: "kategorie speichern",
    categories: "kategorien",
    check: "prüfen",
    checkDateNotSet: "prüfdatum nicht eingestellt",
    checks: "prüft",
    chooseFileToRestore: "wählen Sie die wiederherzustellende Datei aus",
    confirmBackup: "möchten Sie wirklich eine datenbank sichern?",
    confirmCategoryDelete: "möchten sie die kategorie wirklich löschen?",
    confirmCheckDelete: "möchten sie den scheck wirklich löschen?",
    confirmRestore:
      "möchten Sie die datenbank wirklich aus der ausgewählten datei wiederherstellen?",
    databaseRestored: "datenbank wiederhergestellt",
    error: "error",
    errorFileLoad: "fehler beim laden der datei",
    errorFileStructure: "dateistrukturfehler",
    fileNotSelected: "datei nicht ausgewählt",
    fileToRestoreCheck: "datei zum wiederherstellen überprüfen",
    forDate: "zum",
    from: "von",
    impossibleToDeleteRootCategory:
      "es ist unmöglich, die stammkategorie zu löschen",
    invalidDate: "ungültiges datum",
    invalidMimeType: "ungültiger mime-Typ",
    invalidTableName: "ungültiger tabellenname",
    moreThanOneFileSelected: "mehr als eine datei ausgewählt",
    moveCategory: "kategorie verschieben",
    newCategory: "neue Kategorie",
    newRecord: "neuer eintrag",
    noCategorySelected: "keine kategorie ausgewählt",
    noneOfTheParametersSpecified: "keiner der angegebenen parameter",
    notSet: "nicht eingestellt",
    ofFile: "der datei",
    restore: "wiederherstellen",
    restoreDatabaseFromFile: "datenbank aus datei wiederherstellen",
    restorationOfTablesOfObjects: "Wiederherstellung von Objekttabellen",
    results: "ergebnisse",
    root: "wurzel",
    rootCategoryCanNotBeChanged: "stammkategorie kann nicht geändert werden",
    save: "speichern",
    simultaneouslySetParameters: "gleichzeitig parameter einstellen",
    since: "schon seit",
    thisCategoryHasSubcategory: "diese kategorie hat eine unterkategorie",
    table: "tabelle",
    tableErase: "tabelle löschen",
    tableRestoreFromFile: "tabellenwiederherstellung aus datei",
    total: "gesamt",
    until: "bis",
    utility: "nützlichkeit",
    yes: "ja",
  },

  en: {
    add: "add",
    addCategory: "add category",
    and: "and",
    backup: "backup",
    category: "category",
    categoryCanNotBeDeleted: "category cannot be deleted",
    categoryDelete: "delete category",
    categoryEdit: "category edit",
    categoryIsUsedReason: "at least one check item refers to it",
    categoryNameEdit: "edit category name",
    categoryNameNotChanged: "category name not changed",
    categoryNameNotSet: "category name not set",
    categorySave: "category save",
    categories: "categories",
    check: "check",
    checkDateNotSet: "check date not set",
    checks: "checks",
    chooseFileToRestore: "choose file to restore",
    confirmBackup: "do you really want to backup database?",
    confirmCategoryDelete: "do you really want to delete category?",
    confirmCheckDelete: "do you really want to delete check?",
    confirmRestore:
      "do you really want to restore database from selected file?",
    databaseRestored: "database restored",
    error: "error",
    errorFileLoad: "file load error",
    errorFileStructure: "file structure error",
    fileNotSelected: "file not selected",
    fileToRestoreCheck: "file to restore check",
    forDate: "for",
    from: "from",
    impossibleToDeleteRootCategory: "it's impossible to delete root category",
    invalidDate: "invalid date",
    invalidMimeType: "invalid mime-type",
    invalidTableName: "invalid table name",
    moreThanOneFileSelected: "more than one file selected",
    moveCategory: "move category",
    newCategory: "new category",
    newRecord: "new record",
    noCategorySelected: "no category selected",
    noneOfTheParametersSpecified: "none of the parameters specified",
    notSet: "not set",
    ofFile: "of file",
    restore: "restore",
    restoreDatabaseFromFile: "restore database from file",
    restorationOfTablesOfObjects: "restoration of tables of objects",
    results: "results",
    root: "root",
    rootCategoryCanNotBeChanged: "root category can not be changed",
    save: "save",
    simultaneouslySetParameters: "simultaneously set parameters",
    since: "since",
    thisCategoryHasSubcategory: "this category has subcategory",
    table: "table",
    tableErase: "table erase",
    tableRestoreFromFile: "table restore from file",
    total: "total",
    until: "until",
    utility: "utility",
    yes: "yes",
  },

  ru: {
    add: "добавить",
    addCategory: "добавить категорию",
    and: "и",
    backup: "Архивирование",
    category: "категория",
    categoryCanNotBeDeleted: "Категорию НЕЛЬЗЯ удалить",
    categoryDelete: "удалить категорию",
    categoryEdit: "изменение категории",
    categoryIsUsedReason: "на нее ссылается как минимум одна позиция в чеке",
    categoryNameEdit: "изменить название категории",
    categoryNameNotChanged: "название категории не изменено",
    categoryNameNotSet: "не задано название категории",
    categorySave: "сохранить категорию",
    categories: "категории",
    check: "чек",
    checkDateNotSet: "не задана дата чека",
    checks: "чеки",
    chooseFileToRestore: "выберите файл для восстановления",
    confirmBackup: "Вы действительно хотите архивировать базу данных расходов?",
    confirmCategoryDelete:
      "вы действительно хотите удалить категорию расходов?",
    confirmCheckDelete: "Вы действительно хотите удалить чек?",
    confirmRestore:
      "вы действительно хотите восстановить базу данных из выбранного файла?",
    databaseRestored: "База данных восстановлена",
    error: "ошибка",
    errorFileLoad: "Ошибка загрузки файла",
    errorFileStructure: "Ошибка структуры файла",
    fileNotSelected: "файл НЕ выбран",
    fileToRestoreCheck: "проверка восстанавливаемого файла",
    forDate: "за",
    from: "с",
    invalidDate: "неправильная дата",
    invalidMimeType: "недопустимый mime-тип",
    invalidTableName: "НЕдопустимое имя таблицы",
    impossibleToDeleteRootCategory: "невозможно удалить корневую категорию",
    moreThanOneFileSelected: "Выбрано более одного файла",
    moveCategory: "Переместить категорию",
    newCategory: "новая категория",
    newRecord: "новая запись",
    noCategorySelected: "не выбрана категория",
    noneOfTheParametersSpecified: "не задан ни один из параметров",
    notSet: "не задана",
    ofFile: "файла",
    restore: "восстановление",
    restoreDatabaseFromFile: "Восстановить базу данных из файла",
    results: "итоги",
    restorationOfTablesOfObjects: "Восстановление таблиц объектов",
    root: "корень",
    rootCategoryCanNotBeChanged: "нельзя изменять корневую катгорию",
    save: "сохранить",
    simultaneouslySetParameters: "одновременно заданы параметры",
    since: "так как",
    table: "таблица",
    tableErase: "очистка таблицы",
    tableRestoreFromFile: "восстановление таблицы из архива",
    thisCategoryHasSubcategory: "у этой категории есть подкатегория",
    total: "итого",
    until: "до",
    utility: "утилиты",
    yes: "да",
  },
};

export class Locale {
  static setUserLang() {
    // https://qna.habr.com/q/338809
    userLang = (navigator.language || navigator.userLanguage)
      .substr(0, 2)
      .toLowerCase();
    //userLang = "de";
    if (!Object.getOwnPropertyDescriptor(localeStringArray, userLang)) {
      userLang = "en";
    }
    localeString = localeStringArray[userLang];
  }
}
